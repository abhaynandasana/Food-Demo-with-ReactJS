{"ast":null,"code":"var _jsxFileName = \"/home/lcom/Documents/react js/11 Practice Project_ Building a Food Order App/01-starting-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount; //console.log(updatedTotalAmount);\n\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updateItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n};\n\nconst Cartprovider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cartprovider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = Cartprovider;\nexport default Cartprovider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cartprovider\");","map":{"version":3,"sources":["/home/lcom/Documents/react js/11 Practice Project_ Building a Food Order App/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateItems","concat","item","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","Cartprovider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMC,kBAAkB,GACtBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD,CAFyB,CAIvB;;AACA,UAAMC,qBAAqB,GAAET,KAAK,CAACH,KAAN,CAAYa,SAAZ,CAAsBL,IAAI,IAAGA,IAAI,CAACM,EAAL,KAAUV,MAAM,CAACI,IAAP,CAAYM,EAAnD,CAA7B;AACA,UAAMC,gBAAgB,GAAEZ,KAAK,CAACH,KAAN,CAAYY,qBAAZ,CAAxB;AACA,QAAII,YAAJ;;AACA,QAAGD,gBAAH,EAAoB;AAClB,YAAME,WAAW,GAAE,EACjB,GAAGF,gBADc;AAEjBJ,QAAAA,MAAM,EAAGI,gBAAgB,CAACJ,MAAjB,GAA0BP,MAAM,CAACI,IAAP,CAAYG;AAF9B,OAAnB;AAIAK,MAAAA,YAAY,GAAC,CAAC,GAAGb,KAAK,CAACH,KAAV,CAAb;AACAgB,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAoCK,WAApC;AACD,KAPD,MAQK;AACHD,MAAAA,YAAY,GAAEb,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAd;AACD;;AACD,WAAO;AACHR,MAAAA,KAAK,EAACM,WADH;AAEHL,MAAAA,WAAW,EAAGQ;AAFX,KAAP;AAKH;AACF,CA1BD;;AA2BA,MAAMS,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAIA,QAAMuB,oBAAoB,GAAId,IAAD,IAAU;AACrCa,IAAAA,kBAAkB,CAAC;AAAEhB,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMe,yBAAyB,GAAIT,EAAD,IAAQ;AACxCO,IAAAA,kBAAkB,CAAC;AAAEhB,MAAAA,IAAI,EAAE,QAAR;AAAkBS,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMU,WAAW,GAAG;AAClBxB,IAAAA,KAAK,EAAEoB,SAAS,CAACpB,KADC;AAElBC,IAAAA,WAAW,EAAEmB,SAAS,CAACnB,WAFL;AAGlBwB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMT,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateItems = state.items.concat(action.item);\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount; \n      //console.log(updatedTotalAmount);\n      const existingCartItemIndex =state.items.findIndex(item =>item.id===action.item.id);\n      const existingCartItem =state.items[existingCartItemIndex]; \n      let updatedItems;\n      if(existingCartItem){\n        const updatedItem ={\n          ...existingCartItem,\n          amount : existingCartItem.amount + action.item.amount,\n        }\n        updatedItems=[...state.items];\n        updatedItems[existingCartItemIndex]=updatedItem;\n      }\n      else {\n        updatedItems= state.items.concat(action.item);\n      }\n      return {\n          items:updateItems,\n          totalAmount : updatedTotalAmount,\n\n      };\n  }\n};\nconst Cartprovider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default Cartprovider;\n"]},"metadata":{},"sourceType":"module"}